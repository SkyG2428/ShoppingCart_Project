// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using EFDataFirstLIbrary.Models;

namespace EFDataFirstLIbrary
{
    public partial class ComponyContext : DbContext
    {
        public ComponyContext(DbContextOptions<ComponyContext> options)
            : base(options)
        {
        }

        public virtual DbSet<CompanyInfo> CompanyInfos { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Team> Teams { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=MR-AG\\SQLEXPRESS;Initial Catalog=Compony;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CompanyInfo>(entity =>
            {
                entity.HasKey(e => e.CompanyId)
                    .HasName("PK__CompanyI__2D971CAC094C8E22");
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.HasOne(d => d.EmlpoyeeTeam)
                    .WithMany(p => p.Employees)
                    .HasForeignKey(d => d.EmlpoyeeTeamId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Employee__Emlpoy__46E78A0C");
            });

            modelBuilder.Entity<Team>(entity =>
            {
                entity.HasOne(d => d.TeamCompany)
                    .WithMany(p => p.Teams)
                    .HasForeignKey(d => d.TeamCompanyId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Teams__TeamCompa__412EB0B6");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}